{%- assign form_id = 'quote-form' -%}
<style>
  #{{form_id}}-wrap:target{
  box-shadow:  rgb(248, 250, 252) 0px 0px 0px 2px, rgb(147, 197, 253) 0px 0px 0px 6px, rgba(0, 0, 0, 0.05) 0px 1px 2px 0px
  }

  #{{form_id}}{
    --color-error:red,

  }
  #{{form_id}} .input.blured:invalid{
    border-color: var(--color-error);
  }
  #{{form_id}} .input.blured:invalid+label{
    color: var(--color-error);
  }
  #{{form_id}} .input:not([required])+label::after{
    content: ' (Optional)';
  }
  #{{form_id}} .grid__item{
    display: flex;
    flex-direction: column-reverse;    margin-bottom:1em;
  }
  #{{form_id}}  .grid__item .input,  #{{form_id}}  .grid__item textarea{
    padding: 0.8em; border-color:#454545;background:white;    max-width: 400px;

  }
  #{{form_id}} .grid__item label{
    margin-bottom:0.2em;display:none;
  }
  #Contact_us_form{
    scroll-margin-top: 140px;
    text-align:center
  }

   #{{form_id}}-wrap .product-item_title {
             font-size:0.5em;
             line-height: 1.3;
             padding: 0;
             text-transform: uppercase;
             display: block;
             white-space: pre-line;
             font-weight: 500;
             overflow: hidden;
             text-overflow: ellipsis;
              }
           #{{form_id}}-wrap .product-item{
               background:#fff;width:min(70px,20vw);height:100%;border:2px solid;
                          flex-direction: column;
           }


  #{{form_id}}-wrap .product-item_title
           .site-nav__dropdown-ittemprice {
              text-transform: capitalize;
            }
          #{{form_id}}-wrap .product-item_image{
           width:100%;
           padding:0
         }
      #{{form_id}}-wrap .product-item_seats img {
        height: 20px;
        width: auto;
    }
    #{{form_id}}-wrap .product-item_seats{
      display:flex;
      flex-wrap:wrap;
      gap:0 0.7em
    }
     #{{form_id}}-wrap .product-item {
      display: flex;
       align-items:flex-start;
       cursor: pointer;
  }
   #{{form_id}}-wrap .product-item_image {
    width: 100%;

       flex-shrink:0;
   }
   #{{form_id}}-wrap .product-item_image img{
  aspect-ratio:1/1
   }
    #{{form_id}}-wrap .product-item_content{
    padding: 0 0.2em 0.2em;
    display: flex;
    flex-direction: column;
    gap: 0.5em;
  }
  #{{form_id}}-wrap  input[name="product"]:checked + div {
    background: #7fc4eb;
  }
  #{{form_id}}-wrap label:hover input[name="product"] + div {
    border-color: #7fc4eb;
  }
</style>
{% assign thankpageurl = '/pages/thankpage' %}
<div id="{{form_id}}-wrap">
  {%- form 'contact', id: form_id, class: 'target:ring-3', return_to: thankpageurl -%}
    {{ form.errors | default_errors }}
    <input
      hidden
      type="text"
      placeholder="{{  settings.quote_full_name }}"
      class="input-full input hide"
      name="contact[subject]"
      value="NEW CUSTOMER QUOTE REQUEST"
    >
    <div class="grid grid--small">
      <div class="grid__item">
        <input
          type="text"
          required
          placeholder="{{  settings.quote_full_name }}"
          class="input-full input"
          name="contact[Full name]"
          autocapitalize="words"
          value=""
        >
        <label for="ContactFormName-{{ section.id }}">{{ settings.quote_full_name }}</label>
      </div>
      <div class="grid__item">
        <input
          class="input-full input"
          autocomplete="email"
          type="email"
          required
          id="ContactForm-email"
          class="field__input"
          name="contact[email]"
          spellcheck="false"
          autocapitalize="off"
          value="{% if form.email %}{{ form.email }}{% elsif customer %}{{ customer.email }}{% endif %}"
          aria-required="true"
          {% if form.errors contains 'email' %}
            aria-invalid="true"aria-describedby="ContactForm-email-error"
          {% endif -%}
          placeholder="{{  settings.quote_email }}"
        >
        <label for="ContactFormEmail-{{ section.id }}">{{ 'contact.form.email' | t }}</label>
      </div>
      <div class="grid__item">
        <input
          type="tel"
          required
          id="ContactFormPhone-{{ section.id }}"
          class="input-full input"
          name="contact[Phone number]"
          placeholder="{{  settings.quote_phone_number }}"
          pattern="[0-9\-]*"
          value="{% if form.phone %}{{ form.phone }}{% elsif customer %}{{ customer.phone }}{% endif %}"
        >
        <label for="ContactFormPhone-{{ section.id }}">{{ settings.quote_phone_number }}</label>
      </div>
      <div class="grid__item">
        <input
          required
          id="ContactFormPhone-{{ section.id }}"
          class="input-full input"
          name="contact[address]"
          placeholder="Address"
        >
        <label for="ContactFormPhone-{{ section.id }}">{{ 'contact.form.address' | t }}</label>
      </div>
      <div class="grid__item">
        <input
          type="text"
          required
          placeholder="{{  settings.quote_company_name }}"
          class="input-full input"
          name="contact[Company name]"
          autocapitalize="words"
          value=""
        >
        <label for="ContactFormName-{{ section.id }}">{{ settings.quote_company_name }}</label>
      </div>

      <div class="grid__item">
        <select
          type="text"
          required
          placeholder="{{ settings.quote_country }}"
          class="input-full input"
          name="contact[Country/Region]"
          style="    appearance: auto;"
          value="{{ localization.country.iso_code }}"
        >
          {% assign countrymap = '
GB en,
IE ie /en-ie,
US en /en-us,
DK da /da-dk,
SE se /sv-se,
DE de /de-de,
NO no /no-no,
FR fr /fr-fr,
NL nl /nl-nl,
BE nl /nl-be show,
BE fr /fr-be show,
AT de /de-at,
CH de /de-ch,
ES es /es-es,
FI fi /fi-fi,
PL pl /pl-pl,
IT it /it-it' %}

          {% assign contrylangs = countrymap | split: ',' %}
          {%- for contrylang in contrylangs -%}
            {% assign contrylangarray = contrylang | split: ' ' %}
            {% assign contrycode = contrylangarray[0] %}
            {% assign country = localization.available_countries | where: 'iso_code', contrycode | first %}
            {% unless country %}
              {% continue %}
            {% endunless %}
            <option
              value="{{ country.iso_code }}"
              {% if localization.country.iso_code == country.iso_code %}
                selected
              {% endif %}
            >
              {{ country.name }}
            </option>
          {%- endfor -%}
          <option value="other">Other</option>
        </select>
        <label for="ContactFormName-{{ section.id }}">{{ settings.quote_country }}</label>
      </div>
      <div class="grid__item">
        <textarea
          rows="5"
          required
          id="ContactFormMessage-{{ section.id }}"
          class="input-full input"
          placeholder="{{ settings.quote_message }}"
          name="contact[body]"
          value="{%- if form.body -%}{{ form.body }}{%- endif -%}"
        ></textarea>
        <label for="ContactFormMessage-{{ section.id }}">{{ settings.quote_message }}</label>
      </div>
      {% assign collection = collections['office-pods'] %}
      {% unless collection %}
        {% assign collection = collections.first %}
      {% endunless %}
      <div class="grid__item">
        <div
          style="
            display: flex;
            gap: 0.3em;
            flex-wrap: wrap;
          "
        >
          {% for product in collection.products %}
            <label style="display:block">
              <input
                hidden
                type="checkbox"
                class="hide"
                name="contact[product]"
                value="{{ product.title }}:{{ product.first_available_variant.sku }}"
              >
              {% assign title = product.metafields.custom.menu_title.value | default: product.title %}
              {% assign subtitle = product.metafields.custom.menu_subtitle.value
                | default: product.metafields.custom.subtitle
              %}
              {% assign image = product.metafields.custom.menu_image.value %}
              <div class="product-item">
                <div class="product-item_image">
                  {{ image | image_url: width: 300 | image_tag: class: '' }}
                </div>
                <div class="product-item_content">
                  <div class="product-item_title">{{ title }}</div>
                </div>
              </div>
            </label>
          {% endfor %}
        </div>
        <label style="display:block" for="ContactFormMessage-{{ section.id }}">
          {{- settings.quote_interested_booths -}}
        </label>
      </div>

      <div class="submit-btn-wrap grid__item">
        <div>
          <button
            type="submit"
            class="btn"
          >
            {{ settings.quote_submit_btn }}
          </button>
        </div>
      </div>
    </div>
  {%- endform -%}
  <script>
    (() => {
      function logSubmit(event) {
        console.log(`Form Submitted! Timestamp: ${event.timeStamp}`, event);
        let data = {
          create_at: new Date().toISOString(),
          products:[]
        }
        new FormData(event.target).forEach((value, key) => {
          console.log(key, value);
          if(key==='contact[product]'){
            let [title,sku] = value.split(":")
            data.products.push({
              title,
              sku,
              quantity:1
            });
          }else{
            data[key] = value;
          }
        })
        fetch("https://hooks.zapier.com/hooks/catch/14043376/248z11w/",
          {
            headers: {
              'Accept': 'application/json',
              'Content-Type': 'application/json'
            },
            method: "POST",
            mode: "no-cors",
            body: JSON.stringify(data)
          })
          .then(function (res) { console.log(res,data) })
          .catch(function (res) { console.log(res,data) })
      }
      const form = document.getElementById("{{- form_id -}}");
      form.addEventListener("submit", logSubmit);
    })()
  </script>
</div>
