{%- unless block.settings.full_width -%}
  <div class="page-width hero--padded">
{%- endunless -%}

{%- style -%}
     .hero--{{ block.id }} {
       height: {{ block.settings.height_mobile }}px;
     }
     .hero--{{ block.id }} .hero__title {
       font-size: {{ block.settings.title_size | times: 0.5 }}px;
     }
     @media only screen and (min-width: 769px) {
       .hero--{{ block.id }} {
         height: {{ block.settings.height }}px;
       }
       .hero--{{ block.id }} .hero__title {
         font-size: {{ block.settings.title_size }}px;
       }
     }

     {%- assign button_alpha = block.settings.color_accent | color_extract: 'alpha' -%}
     {% unless button_alpha == 0.0 %}
       .hero--{{ block.id }} .btn {
         background: {{ block.settings.color_accent }} !important;
         border-color: {{ block.settings.color_accent }} !important;

         {%- assign accent_brightness = block.settings.color_accent | color_extract: 'lightness' -%}

         {% if accent_brightness > 40 %}
           color: #000 !important;
         {% endif %}
       }
     {% endunless %}

     {% if block.settings.overlay_opacity > 0 %}
       .hero--{{ block.id }} .hero__text-wrap:after {
         content: '';
         position: absolute;
         left: 0;
         right: 0;
         top: 0;
         bottom: 0;
         z-index: 3;
         background-color: #000;
         opacity: {{ block.settings.overlay_opacity | divided_by: 100.0 }};
       }
     {% endif %}
     .hero--{{ block.id }} img{
       position:absolute;
       width:100%;height:100%;object-fit:cover
     }
    .hero--{{ block.id }} video{
     opacity: 0;
       transition: opacity 0.5s ease-out;
   }
      .hero--{{ block.id }} video.playing{
       opacity: 1;
   }
      .hero__media-container.low-lower-mode {
       }
  .hero__media-container.low-lower-mode video{
   }
  .hero--{{ block.id }} .play-btn{
     z-index:-1;
    visibility: hidden;
    pointer-events: none;
  }
   .hero--{{ block.id }}:has(.low-lower-mode) .play-btn{
     z-index:7;
    visibility: visible;
  }
{%- endstyle -%}

<div
  data-section-id="{{ block.id }}"
  data-section-type="video-section"
  class="video-parent-section hero hero--{{ block.id }}"
>
  <div class="hero__media hero__media--{{ block.id }}">
    <div class="hero__media-container">
      {%- if block.settings.video_url contains 'youtube.com/watch' -%}
        {%- assign video_id = block.settings.video_url | split: 'v=' -%}
        {%- assign video_id = video_id[1] | split: '&' | first -%}
        <iframe
          id="YouTubeVideo-template--16793515491553__caeb4e31-7b8d-4ce9-b58a-e2b6bc92d8a7"
          class="video-div"
          data-type="youtube"
          data-video-id="oyozZK1O_NI"
          frameborder="0"
          allowfullscreen="1"
          allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
          title="video"
          width="1280"
          height="720"
          src="https://www.youtube.com/embed/oyozZK1O_NI?autohide=0&amp;cc_load_policy=0&amp;controls=0&amp;fs=0&amp;iv_load_policy=3&amp;modestbranding=1&amp;playsinline=1&amp;rel=0&amp;enablejsapi=1&amp;origin=https%3A%2F%2Fsoundboxstore.com&amp;widgetid=1"
          data-gtm-yt-inspected-9="true"
          tabindex="-1"
        ></iframe>
      {% else %}
        {{
          block.settings.video.preview_image
          | image_url: width: 100
          | image_tag: width: null, style: 'filter: blur(3px)', preload: true, loading: 'eager'
        }}
        <!--
          {% if block.settings.video_m %}
            {{
              block.settings.video_m.preview_image
              | image_url: width: 100
              | image_tag: class: 'mobile-only', style: 'filter: blur(3px)'
            }}
          {% endif %}
        -->
      {% endif %}
    </div>

    {%- if block.settings.video_url contains 'youtube.com/watch' -%}
      {%- assign video_id = block.settings.video_url | split: 'v=' -%}
      {%- assign video_id = video_id[1] | split: '&' | first -%}
      <div
        id="YouTubeVideo-{{ block.id }}"
        class="video-div"
        data-type="youtube"
        data-video-id="{{ video_id }}"
      ></div>
    {% else %}
      <template class="mobile-only">
        {{ block.settings.video_m | video_tag: autoplay: true, loop: true, muted: true, controls: true, id: 'video_m' }}
      </template>
      <template class="desktop-only">
        {{ block.settings.video | video_tag: autoplay: true, loop: true, muted: true, controls: true, id: 'video_d' }}
      </template>
    {%- endif -%}
  </div>
  {%- unless block.settings.video_url contains 'youtube.com/watch' -%}
    <div
      class="play-btn"
      style="
              display:none;
        position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            transition: all 0.7s cubic-bezier(0.4, 0, 1, 1);
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100%;
            color: #000c;
        }
      "
    >
      <svg
        style="
                   backdrop-filter: blur(5px);
          padding: 0 12px;
          border-radius: 50%;
        "
        xmlns="http://www.w3.org/2000/svg"
        width="100"
        height="100"
        viewBox="0 0 32 32"
      >
        <path fill="currentColor" d="M31.328 8.271a4.006 4.006 0 0 0-2.787-2.781c-2.495-.667-12.525-.667-12.525-.667S6.005 4.807 3.484 5.49A4.005 4.005 0 0 0 .703 8.271a41.574 41.574 0 0 0-.697 7.745a42.136 42.136 0 0 0 .697 7.708a4.022 4.022 0 0 0 2.781 2.787c2.495.667 12.532.667 12.532.667s10.005 0 12.525-.667a4.023 4.023 0 0 0 2.787-2.787c.459-2.541.683-5.125.667-7.708c.016-2.6-.203-5.188-.667-7.745zM12.812 20.803v-9.595l8.349 4.808z"></path>
      </svg>
    </div>
    {% assign id = block.id | append: '_v' %}
    <script>
      let played = false
         function onviedoHover() {
           if (played) return
           played = true
           localStorage.setItem("{{ id }}", true)
           let e = document.querySelector(".hero--{{ block.id }} .hero__media-container")
           let t = document.querySelector(".hero--{{ block.id }} template.desktop-only")
           if (window.innerWidth < 679) {
             t = document.querySelector(".hero--{{ block.id }} template.mobile-only")
           }
           e.append(t.content.cloneNode(true))

           let v = document.querySelector(".hero--{{ block.id }} .hero__media-container video")
           if (v) {
             v.addEventListener("play", (event) => {
               v.classList.add("playing")
               v.removeAttribute('controls')
                e.classList.remove("low-lower-mode")
             });
            //  v.addEventListener('suspend', () => {
            //    alert("suspend")
            // });

           }
           setTimeout(() => {
             let v = document.querySelector(".hero--{{ block.id }} .hero__media-container video")
             if (v.currentTime === 0) {
               v.play().then(() => {}).catch((error) => {
                  e.classList.add("low-lower-mode")
                  document.querySelector(".hero__text-wrap").addEventListener("click",()=>{v.play()})
              });
             }
           }, 300)
         }
         if (localStorage.getItem("{{ id }}")) {
           onviedoHover()
         } else {
           document.addEventListener("mouseover", onviedoHover, { once: true })
           window.addEventListener("scroll", onviedoHover, { once: true })
         }
        setTimeout(onviedoHover, 2000)
    </script>
  {% endunless %}

  <div class="hero__text-wrap">
    <div class="page-width">
      <div class="hero__text-content {{ block.settings.text_align }}">
        <div class="hero__text-shadow">
          {%- if block.settings.video_url contains 'vimeo.com' -%}
            <button type="button" id="VimeoTrigger-{{ block.id }}" class="vimeo-mobile-trigger medium-up--hide">
              <svg
                aria-hidden="true"
                focusable="false"
                role="presentation"
                class="icon icon-play"
                viewBox="18.24 17.35 24.52 28.3"
              >
                <path fill="#323232" d="M22.1 19.151v25.5l20.4-13.489-20.4-12.011z"/>
              </svg>
            </button>
          {%- endif -%}
          {%- unless block.settings.h1 == blank -%}
            <h1 style="position:absolute;opacity:0">
              {{ block.settings.h1 | newline_to_br }}
            </h1>
          {%- endunless -%}
          {%- unless block.settings.title == blank -%}
            <h2 class="h1 hero__title">
              {{ block.settings.title | newline_to_br }}
            </h2>
          {%- endunless -%}
          {%- if block.settings.subheading or block.settings.link -%}
            {%- unless block.settings.subheading == blank -%}
              <div class="hero__subtitle">
                {{ block.settings.subheading | escape }}
              </div>
            {%- endunless -%}
            <div style="display:flex;gap:1em">
              {%- if block.settings.link_text != blank -%}
                {%- assign link_href = block.settings.link -%}
                {%- if block.settings.link == blank -%}
                  {%- assign link_href = block.settings.video_url -%}
                {%- endif -%}
                <div class="hero__link">
                  <a
                    href="{{ link_href }}"
                    class="btn{% if block.settings.color_accent and block.settings.color_accent == 'rgba(0,0,0,0)' %} btn--inverse{% endif %}"
                  >
                    {%- if link_href contains 'youtube.com/watch' or link_href contains 'youtu.be/' -%}
                      <svg
                        aria-hidden="true"
                        focusable="false"
                        role="presentation"
                        class="icon icon-play"
                        viewBox="18.24 17.35 24.52 28.3"
                      >
                        <path fill="#323232" d="M22.1 19.151v25.5l20.4-13.489-20.4-12.011z"/>
                      </svg>
                    {%- endif -%}
                    {{ block.settings.link_text }}
                  </a>
                </div>
              {%- endif -%}
              {%- if block.settings.link2_text != blank -%}
                {%- assign link_href = block.settings.link2 -%}
                {%- if block.settings.link2 == blank -%}
                  {%- assign link_href = block.settings.video_url -%}
                {%- endif -%}
                <div class="hero__link">
                  <a
                    href="{{ link_href }}"
                    class="btn{% if block.settings.color_accent and block.settings.color_accent == 'rgba(0,0,0,0)' %} btn--inverse{% endif %}"
                  >
                    {{ block.settings.link2_text }}
                  </a>
                </div>
              {%- endif -%}
            </div>
          {%- endif -%}
        </div>
      </div>
    </div>
  </div>
</div>

{%- unless block.settings.full_width -%}
  </div>
{%- endunless -%}
