<style>
  @media only screen and (max-width: 540px) {
    .meeting-rooms-features .flexbox .col:not(:last-child) {
      max-width: 100%;
    }
    .meeting-rooms-features .flexbox .col.right-col {
      max-width: 100%;
      margin-top: 20px;
    }
  }
  @media only screen and (max-width: 991px) {
    .features-list-row {
      padding: 0.5em;
    }
    .features-list-row-wrap > div {
      max-height: 0;
      opacity: 0;
      height: 0;
      transition: all 0.3s linear;
      overflow: hidden;
      padding-bottom: 0;
      margin-bottom: 10px;
    }
    .features-list-row-wrap > label {
      margin: 0;
      height: 40px;
      line-height: 30px;
      padding: 0.2em 0.5em;
      background-color: #f1f1f1;
      position: relative;
    }
    .features-list-row-wrap > label::after {
      transition: all 0.3s ease-in-out;
      display: block;
      content: "";
      width: 8px;
      height: 8px;
      border: 2px solid currentColor;
      border-right: none;
      border-bottom: none;
      transform: rotate(-135deg);
      position: absolute;
      right: 14px;
      top: 14px;
    }
    .features-list-row input:checked + .features-list-row-wrap > label::after {
      transform: rotate(45deg);
      top: 14px;
    }
    .meeting-rooms-features .features-list .features-list-row {
      padding: 0;
    }
    .features-list-row-wrap > div > div {
      transform: translateY(-100%);
      transition: all 0.3s linear;
      padding: 0.2em 0.5em;
    }
    .features-list-row input:checked + .features-list-row-wrap > div {
      display: block;
      max-height: 9999px;
      opacity: 1;
      height: auto;
      transform: scale(1);
      padding-bottom: 10px;
      background-color: #f1f1f1;
    }
    .features-list-row input:checked + .features-list-row-wrap > div > div {
      transform: translateY(0);
    }
    .meeting-rooms-features .flexbox .col.right-col {
      text-align: left;
    }
    .meeting-rooms-features .hotspot-icon:before {
      opacity: 1;
      visibility: visible;
    }
  }
  .meeting-room-features-video .video-player-controls > button {
    padding:0;
    border-radius: 99em;
    width: 60px;
    height: 60px;
  }
  .meeting-room-features-video .video-player-controls > button svg {
    height: 100%;
    width: 100%;
    color:#3A434D;
  }
  .meeting-room-features-video .video-player-controls.active .stop-button svg{
    color:#979797;
    opacity: .3;
  }
  .meeting-room-features-video .center-col .control .switch,
  .meeting-room-features-video .center-col .control .switch:after{
    border-radius:99em;
  }
  .meeting-room-features-video video{
      -webkit-mask-image: -webkit-radial-gradient(white, black);
    -webkit-backface-visibility: hidden;
    -moz-backface-visibility: hidden;
    -webkit-appearance: none
  }
</style>
<section class="meeting-rooms-features {{ ' ' }} {%- if section.settings.show_videos -%}
      meeting-room-features-video
    {%- else -%}
    
    {%- endif -%}"><div class="page-width">
    <div class="flexbox">

      <div class="col left-col">
        <div class="col-wrap">
          <div class="features-list">
            {% for block in section.blocks %}
              {% if block.type == "features_list_left" %}

                {% if block.settings.title != blank %}
                  <div class="features-list-row" data-type="{{ block.settings.title }}">
                    <input hidden type="checkbox" id="input-{{ block.settings.title | handleize }}"/>
                    <div id="feature-{{ block.settings.title | handleize }}" class="features-list-row-wrap">
                      <label for="input-{{ block.settings.title | handleize }}">{{ block.settings.title }}
                      </label>
                      <div>
                        <div>
                          {{ block.settings.description }}
                        </div>
                      </div>
                    </div>
                  </div>
                {% endif %}

              {% endif %}
            {% endfor %}
          </div>
        </div>
      </div>

      {%- assign current_variant = product.selected_or_first_available_variant -%}
      {%- assign imgs = current_variant.metafields.global.images.value -%}
      {%- unless imgs -%}
        {%- assign imgs = product.images | where: 'alt' , vaSku -%}
      {%- endunless -%}
      {%- for image in imgs -%}
        {%- if prod_img -%}
          {%- assign prod_img = image -%}
          {% break %}
        {%- else -%}
          {%- assign prod_img = image -%}
        {%- endif -%}
      {%- endfor -%}
      <div class="col center-col" {%- if section.settings.show_videos -%}style="lign-self: start;"{% endif %}>
          <div class="col-wrap">
        {%- if section.settings.show_videos -%}
          <div >
            <div class="video-player active">
              <div class="video-wrapper">

                <video width="1000" height="1000" {% if section.settings.loop %}loop {% endif %} playsinline {% if section.settings.no_sound %} muted {% endif %} src="{{ section.settings.open_video }}" {% if section.settings.open_thumb != blank %} poster="{{ section.settings.open_thumb }}" {% endif %} class="video video-primary" id="vid1"></video>
                <video width="1000" height="1000" {% if section.settings.loop %}loop {% endif %} playsinline {% if section.settings.no_sound %} muted {% endif %} src="{{ section.settings.close_video }}" {% if section.settings.close_thumb != blank %} poster="{{ section.settings.close_thumb }}" {% endif %} class="video video-secondary" id="vid2"></video>
              </div>
            </div>
            <div class="video-player-controls  ended "  style="margin-bottom:2em">
              <button class="play-button">
             <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
                <circle cx="30" cy="30" r="29" stroke="currentColor" stroke-width="2"/>
                <path d="M41 28.2679C42.3333 29.0377 42.3333 30.9623 41 31.7321L26 40.3923C24.6667 41.1621 23 40.1999 23 38.6603L23 21.3397C23 19.8001 24.6667 18.8379 26 19.6077L41 28.2679Z" fill="currentColor"/>
              </svg>
            </button>
            <button class="stop-button">
               <svg xmlns="http://www.w3.org/2000/svg" width="60" height="60" viewBox="0 0 60 60" fill="none">
                <circle cx="30" cy="30" r="29" stroke="currentColor" stroke-width="2"/>
                <rect x="22" y="18" width="4" height="24" rx="2" fill="currentColor"/>
                <rect x="34" y="18" width="4" height="24" rx="2" fill="currentColor"/>
              </svg>
              
            </button>


              <div class="control">
                <div class="label label-outside">{{ section.settings.close_label }}</div>
                <div class="switch"></div>
                <div class="label label-inside">{{  section.settings.open_label }}</div>
              </div>
            </div>
            <audio id="audio-close"  loop >
                <source src="{{ section.settings.close_audio }}" type="audio/mpeg">
              Your browser does not support the audio element.
            </audio>
            <audio id="audio-open"  loop >
              <source src="{{ section.settings.open_audio }}" type="audio/mpeg">
            Your browser does not support the audio element.
          </audio>
          </div>
          <script>
            $(document).ready(function() {
              $('#audio-close').get(0).muted = true;
                    $('#audio-open').get(0).muted = true;
                    $('#vid1').get(0).muted=true;
                    $('#vid2').get(0).muted=true;
            let isClosed = true
            let isPlaying = false
            let ismuted =true
            $('#vid2').get(0).addEventListener("ended", ()=>{
                if(isClosed){
                  console.log('#vid2')
                  if(!ismuted){
                     $('#audio-close').get(0).muted = false;
                  }
                  $('#audio-close').get(0).currentTime = 0;
                  $('#audio-close').get(0).play();
                  isPlaying=false
                }
       
            })
           $('#vid1').get(0).addEventListener("ended", ()=>{
             if(!isClosed){
               console.log('#vid1')
                if(!ismuted){
                     $('#audio-open').get(0).muted = false;
                  }
                $('#audio-open').get(0).currentTime = 0;
                $('#audio-open').get(0).play();
                isPlaying=false
             }
            })
              $(".play-button").on("click", function() {
                ismuted=false
                $('#audio-open').get(0).currentTime = 0;
                  $(".video-player-controls").addClass("active");
                 if(isClosed){
                    $('#audio-close').get(0).muted=false;
                    if(!isPlaying){
                      $('#audio-close').get(0).play()
                    }
                 }else{
                    $('#audio-open').get(0).muted=false;
                   if(!isPlaying){
                      $('#audio-open').get(0).play()
                    }
                 }
                $('#vid1').get(0).muted=false;
                $('#vid2').get(0).muted=false;
                
              });
               $(".stop-button").on("click", function() {
                ismuted=true
                $(".video-player-controls").removeClass("active");
                $('#audio-close').get(0).muted=true;
                $('#audio-open').get(0).muted=true;
                $('#vid1').get(0).muted=true;
                $('#vid2').get(0).muted=true;

              });
              $(".label-inside").on("click", function() {
                isClosed=false
                isPlaying=true
                $('#audio-close').get(0).pause()
                $('#audio-open').get(0).pause()
                $(".control").addClass("active");
                $(".video-player").addClass("active");
                $('#vid2').get(0).pause();
                $('#vid2').get(0).currentTime = 0;
           $('#vid1').get(0).currentTime = 0;
                $('#vid1').get(0).play();
                
              });
             
              $(".label-outside").on("click", function() {
                 isClosed=true
                  isPlaying=true
                $('#audio-close').get(0).pause()
                $('#audio-open').get(0).pause()
                 $(".control").removeClass("active");
                 $(".video-player").removeClass("active");
                 $('#vid1').get(0).pause();
                $('#vid1').get(0).currentTime = 0;
                $('#vid2').get(0).currentTime = 0;
                 $('#vid2').get(0).play();
              });
           $(".switch").on("click", function() {
                if( $(".control").hasClass("active")){
                    $(".label-outside").click()
                }else{
                    $(".label-inside").click()
                }
              });
            });
          </script>
        {%- else -%}
            <img loading="lazy" style="width:100%" srcset="{% if prod_img.width >= 288 %}{{ prod_img | image_url: width: 288 }} 288w,{% endif %}
                                                    {% if prod_img.width >= 576 %}{{ prod_img | image_url: width: 576 }} 576w,{% endif %}
                                                    {% if prod_img.width >= 550 %}{{ prod_img | image_url: width: 550 }} 550w,{% endif %}
                                                    {{ prod_img | image_url:  width: 700 }} " src="{{ prod_img | image_url: width: 550, height: 550 }}" sizes="(min-width: 1200px) calc((1200px - 10rem) / 2), (min-width: 750px) calc((100vw - 11.5rem) / 2), calc(100vw - 4rem)" alt="{{ prod_img.alt | escape }}">

            


        {%- endif -%}
        <div {% if section.settings.show_videos  %}style="transform: scale(1);
    position: absolute;
    width: 100%;
    top: 5%;
    left: 0;
    padding-bottom: 95%;"{% endif %}>
{% for block in section.blocks %}
              {% if block.type == "hotspot_point" %}

                <span class="hotspot-icon unique-{{- block.id -}}" data-tooltip="{{ block.settings.hotspot_title }}" data-target="feature-{{  block.settings.hotspot_title | handleize }}">
                  <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" width="395.71px" height="395.71px" viewBox="0 0 395.71 395.71" style="enable-background:new 0 0 395.71 395.71;" xml:space="preserve">
                    <g>
                      <path d="M197.849,0C122.131,0,60.531,61.609,60.531,137.329c0,72.887,124.591,243.177,129.896,250.388l4.951,6.738   c0.579,0.792,1.501,1.255,2.471,1.255c0.985,0,1.901-0.463,2.486-1.255l4.948-6.738c5.308-7.211,129.896-177.501,129.896-250.388   C335.179,61.609,273.569,0,197.849,0z M197.849,88.138c27.13,0,49.191,22.062,49.191,49.191c0,27.115-22.062,49.191-49.191,49.191   c-27.114,0-49.191-22.076-49.191-49.191C148.658,110.2,170.734,88.138,197.849,88.138z"/>
                    </g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                    <g></g>
                  </svg>
                </span>

              {% endif %}
            {% endfor %}
            </div>
                      </div>
      </div>

      <div class="col right-col">
        <div class="col-wrap">

          {% comment %}
            {% if section.settings.title != blank %}
            <h2 class="title-font">{{ section.settings.title }}</h2>
            {% endif %}
          {% endcomment %}


          <div class="features-list">
            {% for block in section.blocks %}
              {% if block.type == "features_list_right" %}
                {% if block.settings.title != blank %}
                  <div class="features-list-row" data-type="{{ block.settings.title }}">
                    <input hidden type="checkbox" id="input-{{ block.settings.title | handleize }}"/>
                    <div id="feature-{{ block.settings.title | handleize }}" class="features-list-row-wrap">
                      <label for="input-{{ block.settings.title | handleize }}">{{ block.settings.title }}
                      </label>
                      <div>
                        <div>
                          {{ block.settings.description }}
                        </div>
                      </div>
                    </div>
                  </div>
                {% endif %}
              {% endif %}
            {% endfor %}
          </div>

        </div>
      </div>
    </div>
  </div>
</section>


<style>
  {% for block in section.blocks %}
    {% if block.type == "hotspot_point" %}
      {% if block.settings.point_x != blank or block.settings.point_y != blank %}
        .meeting-rooms-features .hotspot-icon.unique-{{ block.id }}{
          left: {{ block.settings.point_x }}%;
          top: {{ block.settings.point_y }}%
        }
        {%- if block.settings.point_x < 40 -%}
          .meeting-rooms-features .hotspot-icon.unique-{{ block.id }}::before{
            left: unset;
            right: 0;
          }

        {%- endif - %}
      {% endif %}
    {% endif %}
  {% endfor %}
  .ping {
    position: relative;
  }
  .ping::before {
    position: absolute;
    top: -0.5em;
    bottom: -0.5em;
    left: -0.5em;
    right: -0.5em;
    content: '';
    animation: ping 3s cubic-bezier(0, 0, 0.2, 1) 1 forwards;
    border: 2px solid lightblue;
  }
  @keyframes ping {
    75%,
    100% {
      transform: scale(1.1);
      opacity: 0;
    }
  }
  .features-list-row-wrap {
    scroll-margin-top: 160px
  }
  .meeting-rooms-features .hotspot-icon {
    width: 5vw;
  }
</style>
{% assign scrollWhenClick = true %}

<script>
  document.querySelectorAll(".hotspot-icon").forEach(node => {
    node.addEventListener("click", (e) => {
      console.log(node.dataset.target)
      const targetE = document.querySelector("#" + node.dataset.target);
      const targetInput = document.querySelector("#" + node.dataset.target.replace('feature-', 'input-'));{% if scrollWhenClick %}
        if (window.innerWidth < 991) {
          targetE.scrollIntoView({behavior: "smooth", block: "center", inline: "nearest"});
        }
      {%  endif %}targetE.classList.remove('ping');
      setTimeout(() => {
        targetE.classList.add('ping');
        if (targetInput) {
          targetInput.checked = true
        }

      })
    })
  })
</script>


{% schema %}
  {
    "name": "Meeting Rooms Features",
    "settings": [
      {
        "type": "checkbox",
        "id": "show_videos",
        "label": "Show videos",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "no_sound",
        "label": "No sound",
        "default": false
      },
      {
        "type": "checkbox",
        "id": "loop",
        "label": "Loop",
        "default": true
      },
      {
        "type":"header",
        "content":"Close"
      },
      {
        "type": "text",
        "id": "close_label",
        "label": "Close door",
        "default":"Close door"
      },
      {
        "type": "text",
        "id": "close_audio",
        "label": "Audio Url",
        "default": "https://cdn.shopify.com/s/files/1/0631/9892/0929/files/Closing_Audio_MP3.mp3?v=1667799734"
      },
      {
        "type": "text",
        "id": "close_video",
        "label": "Video Url",
        "default":"https://cdn.shopify.com/videos/c/o/v/fecf113d20434e068abd32a1bc8c3ed6.mp4"
      },
      {
        "type": "text",
        "id": "close_thumb",
        "label": "Thumb Url"
      },
      {
        "type":"header",
        "content":"Open"
      },
      {
        "type": "text",
        "id": "open_label",
        "label": "Open door",
        "default": "Open door"
      },
      {
        "type": "text",
        "id": "open_audio",
        "label": "Audio Url",
        "default":"https://cdn.shopify.com/s/files/1/0631/9892/0929/files/Opening_Audio_MP3.mp3?v=1667799734"
      },
      {
        "type": "text",
        "id": "open_video",
        "label": "Video Url",
        "default" :"https://cdn.shopify.com/videos/c/o/v/f9efd8f6c5794c16b07d5dccc0e32b37.mp4"
      },
      {
        "type": "text",
        "id": "open_thumb",
        "label": "Thumb Url"
      }
    ],
    "blocks": [
      {
        "type": "features_list_left",
        "name": "Features List Left",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          }, {
            "type": "richtext",
            "id": "description",
            "label": "Description"
          }
        ]
      }, {
        "type": "feature_middle_image",
        "name": "Features Middle Image",
        "settings": [
          {
            "type": "image_picker",
            "id": "middle-img",
            "label": "Features Middle Image"
          }

        ]
      }, {
        "type": "features_list_right",
        "name": "Features List Right",
        "settings": [
          {
            "type": "text",
            "id": "title",
            "label": "Title"
          }, {
            "type": "richtext",
            "id": "description",
            "label": "Description"
          }
        ]
      }, {
        "type": "hotspot_point",
        "name": "Hotspot Points",
        "settings": [
          {

            "type": "range",
            "id": "point_x",
            "label": "Left Position",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 0

          }, {

            "type": "range",
            "id": "point_y",
            "label": "Top Position",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "default": 0

          }, {
            "type": "text",
            "id": "hotspot_title",
            "label": "Enter Feature Title"

          }
        ]

      }
    ]
  }
{% endschema %}