{%- if section.settings.external_video_url contains 'youtube.com/watch' -%}
  {%- assign video_id = section.settings.external_video_url | split: 'v=' -%}
  {%- assign video_id = video_id[1] | split: '&' | first -%}
{%- endif -%}
{%- if section.settings.external_video_url contains 'youtu.be/' -%}
  {%- assign video_id = section.settings.external_video_url | split: '.be/' -%}
  {%- assign video_id = video_id[1] | split: '&' | first -%}
{%- endif -%}
<style>
   #youtube-wrap-{{ video_id }} img{
         transition: all 0.7s cubic-bezier(0.4, 0, 1, 1);
   }
  #youtube-wrap-{{ video_id }}.played img{
    opacity:0;
    filter:blur(20px);
    pointer-events: none;
  }
</style>
<div class="page-width hero--padded">
  <div id="youtube-wrap-{{ video_id }}" style="width:100%;position:relative;padding-bottom:56%">
    <iframe
      id="youtube-{{ video_id }}"
      style="position:absolute;top:0;left:0;width:100%;height:100%"
      width="1541"
      height="863"
      src="https://www.youtube.com/embed/{{ video_id }}?autohide=0&cc_load_policy=0&controls=0&fs=0&iv_load_policy=3&modestbranding=1&playsinline=1&rel=0&enablejsapi=1&origin=https%3A%2F%2Fthankyou-485.myshopify.com&widgetid=2"
      title="YouTube video player"
      frameborder="0"
      allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share"
      allowfullscreen
    ></iframe>
    {{
      section.settings.image
      | image_url: width: 1024
      | image_tag: style: 'position:absolute;top:0;left:0;width:100%;height:100%;object-fit:cover;', loading: 'lazy'
    }}
  </div>
</div>
<script>
  (()=>{
     const wrapper = document.querySelector("#youtube-wrap-{{ video_id }}")
    document.querySelector("#youtube-wrap-{{ video_id }} img").addEventListener('click',()=>{
        wrapper.classList.add("played");
        let iframeE =wrapper.querySelector("iframe") ;
        iframeE.src=iframeE.src+"&autoplay=1";
    })
  })()
</script>
<div id="ytplayer"></div>

<script>
  // Load the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/player_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // Replace the 'ytplayer' element with an <iframe> and
  // YouTube player after the API code downloads.
  var player;
  function onYouTubePlayerAPIReady() {
    player = new YT.Player('ytplayer', {
      height: '360',
      width: '640',
      controls:0,
      enablejsapi:1,
      loop:1,
      videoId: '{{video_id}}',
       playerVars: {
            'playsinline': 1
          },
          events: {
            'onReady': onPlayerReady,
            'onStateChange': onPlayerStateChange
          }
    });
  }
  function onPlayerReady(event) {
        event.target.playVideo();
       console.log('onPlayerReady')
      }

      // 5. The API calls this function when the player's state changes.
      //    The function indicates that when playing a video (state=1),
      //    the player should play for six seconds and then stop.
      function onPlayerStateChange(event) {
        if (event.data == YT.PlayerState.PLAYING && !done) {
          console.log(Date.now())
        }
      }
</script>
{% schema %}
  {
    "name": "Youtube section",
    "settings": [
       {
  "type": "image_picker",
  "id": "image",
  "label": "Youtube image"

},
     {
  "type": "video_url",
  "id": "external_video_url",
  "label": "Youtube video",
  "accept": [
    "youtube"
  ]
}
    ],
      "presets": [{
    "name": "Youtube section"
  }]
  }
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
